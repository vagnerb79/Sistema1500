@model IEnumerable<HoursDay>

@{
    ViewData["Title"] = "Index";
}

<section class="content-header">
    <h1> <a asp-action="Create"> Criar Novo </a> </h1>
</section>
<section class="content">
    <div class="row">
        <div class="col-xs-12">
            <div class="box">
                <div class="box-header">
                    <h3 class="box-title">Horas Dia</h3>
                </div>
                <div class="box-body">
                    <table id="table" class="table table-hover">
                        <thead>
                            <tr>
                                <th>
                                    <input id="checkCentral" type="checkbox" />
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.ActualStates)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Date)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.RealTime)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Delivered)
                                </th>
                                <th>

                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        <input name="checkSelect" type="checkbox" value="@item.Id" />
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ActualStates.Description)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Date)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.RealTime)h
                                    </td>
                                    <td>
                                        @{
                                            if (item.Delivered == true)
                                            {
                                                <ion-icon name="checkmark" style="color:blue">Sim</ion-icon>

                                            }
                                            if (item.Delivered == false)
                                            {
                                                <ion-icon name="close" style="color:red">Não</ion-icon>

                                            }
                                        }
                                    </td>
                                    <td>
                                        <a asp-action="Edit" asp-route-id="@item.Id" style="font-size:18px"><ion-icon name="color-wand-sharp"></ion-icon></a>
                                        <a asp-action="Details" asp-route-id="@item.Id" style="font-size:18px"><ion-icon name="information-circle-sharp"></ion-icon></a>
                                        <a asp-action="Delete" asp-route-id="@item.Id" style="font-size:18px;color:red"><ion-icon name="trash-sharp"></ion-icon></a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                        <tfoot>
                            <tr>
                                <th style="visibility: hidden"></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th style="visibility: hidden"></th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <button id="botaoDeletar" type="button" style="display:none; border:none; background:transparent; color: red;font-size:20px">
        <i class="fa fa-trash"></i>
    </button>
</section>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            $("#checkCentral").click(function () {
                $("input[name='checkSelect']").prop('checked', $(this).prop('checked'));

                if ($(this).prop('checked')) {
                    $("#botaoDeletar").show();
                }
                else {
                    $("#botaoDeletar").hide();
                }
            });

            $("input[name='checkSelect']").click(function () {
                var selectedIds = $("input[name='checkSelect']:checked").length;

                if ($(this).is(':checked') || selectedIds > 0) {
                    $("#botaoDeletar").show();
                }
                else {
                    $("#botaoDeletar").hide();
                    $("#checkCentral").prop('checked', false);
                }
            });

            $("#botaoDeletar").click(function () {
                var idsSelecionados = $("input[name='checkSelect']:checked").map(function () {
                    return $(this).val();
                }).get();

                if (idsSelecionados.length > 0) {
                    if (confirm("Tem certeza que deseja DELETAR ?")) {
                        $.ajax({
                            url: '@Url.Action("MultipleDelete" , "Circles")',  //Preenchimento de acordo com a ação do Controller
                            type: 'POST',
                            data: { ids: idsSelecionados },
                            success: function () {
                                location.reload();
                            },
                            error: function () {
                                alert("Erro ao Deletar!!");
                            }
                        });
                    }
                }
                else {
                    alert("Selecione um item para Deletar!!");
                }
            });
        });

        $(document).ready(function () {
            $('#table').DataTable({
                language: {
                    "emptyTable": "Nenhum registro encontrado ",
                    "info": " Mostrando de _START_ até _END_ de _TOTAL_ registros ",
                    "infoFiltered": "(Filtrados de _MAX_ registros)",
                    "infoThousands": ".",
                    "loadingRecords": " Carregando...",
                    "lengthMenu": "Exibir _MENU_ resultados por página",
                    "infoEmpty": " Mostrando 0 até 0 de 0 registro(s)",
                    "zeroRecords": "Nenhum registro encontrado ",
                    "search": " Pesquisar  ",
                    "infoEmpty": " Mostrando 0 até 0 de 0 registro(s)",
                    "processing": " Carregando...",
                    "searchPlaceholder": " Pesquisar Registros ",
                    "paginate": {
                        "next": "   Próximo  ",
                        "previous": "  Anterior   ",
                        "first": "  Primeiro  ",
                        "last": "  Último  "
                    },
                },
                initComplete: function () {
                    this.api()
                        .columns()
                        .every(function () {
                            var column = this;
                            var select = $('<select><option value="">Filtrar</option></select>')
                                .appendTo($(column.footer()).empty())
                                .on('change', function () {
                                    var val = $.fn.dataTable.util.escapeRegex($(this).val());

                                    column.search(val ? '^' + val + '$' : '', true, false).draw();
                                });

                            column
                                .data()
                                .unique()
                                .sort()
                                .each(function (d, j) {
                                    select.append('<option value="' + d + '">' + d + '</option>');
                                });
                        });
                },
            });
        });
    </script>

}
